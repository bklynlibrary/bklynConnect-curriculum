@font-face {
    font-family: 'Open sans';
    src: url('../fonts/OpenSans-Regular-webfont.eot');
    src: url('../fonts/OpenSans-Regular-webfont.eot?#iefix') format('embedded-opentype'),
         url('../fonts/OpenSans-Regular-webfont.woff') format('woff'),
         url('../fonts/OpenSans-Regular-webfont.ttf') format('truetype'),
         url('../fonts/OpenSans-Regular-webfont.svg#open_sansbold') format('svg');
    font-weight: normal;
    font-style: normal;

}

@font-face {
    font-family: 'Arvo';
    src: url('../fonts/Arvo.woff') format('woff'),
         url('../fonts/Arvo.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;

}

@font-face {
    font-family: 'CircularStd';
    src: url('../fonts/CircularStd-Black.woff') format('woff'),
         url('../fonts/CircularStd-Black.ttf') format('truetype');
    font-weight: 800;
    font-style: normal;
}

@font-face {
    font-family: 'CircularStd';
    src: url('../fonts/CircularStd-Book.woff') format('woff'),
         url('../fonts/CircularStd-Book.ttf') format('truetype');
    font-weight: 400;
    font-style: normal;
}

@font-face {
    font-family: 'CircularStd';
    src: url('../fonts/CircularStd-Bold.woff') format('woff'),
         url('../fonts/CircularStd-Bold.ttf') format('truetype');
    font-weight: bold;
    font-style: normal;
}

// /* CircularStd $font-face kit */
// $hash: 'bcc26993292869431e54c666aafa8fcd';
// $path: '../fonts';
// $FontName: 'CircularStd';

// $sufix-list: '-Black', '-BlackItalic', '-Bold', '-BoldItalic', '-Medium', '-MediumItalic', '-Book', '-BookItalic';
// $weight-list:  800,        800,          600,       600,         500,        500,             400,        400;
// $style-list:  normal,     italic,       normal,     italic,     normal,     italic,         normal,     italic;


// @mixin generator($index: 1) when ( $index =< length($sufix-list) ){
//     // get item name
//     $suf: extract($sufix-list, $index);
//     // name of font file
//     $name: "${FontName}${suf}";
//     // get font weight for this prefix (file and font-family)
//     $weight: extract($weight-list, $index);
//     // get font style for this prefix (file and font-family)
//     $style: extract($style-list, $index);

//     $font-face {
//         // font-family: e(`'${name}'@include toLowerCase()`);
//         // font-family: $name;
//         font-family: $FontName;
//         src: url('${path}/${name}.eot');
//         src:
//             url('${path}/${name}.eot?#iefix') format('embedded-opentype'),
//             url('${path}/${name}.woff') format('woff'),
//             url('${path}/${name}.ttf') format('truetype'),
//             url('${path}/${name}.svg#${hash}') format('svg');
//         font-weight: $weight;
//         font-style: $style;
//     }

//     // next iteration
//     @include generator($index + 1);
// }
// @include generator();
